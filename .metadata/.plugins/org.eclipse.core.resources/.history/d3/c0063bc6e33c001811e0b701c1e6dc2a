import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;


public class SelectModeGUI {
	private static JFrame modeSelectionFrame;
	
	
	public static void startGUI(){
		modeSelectionFrame = new JFrame("Select Mode");
		modeSelectionFrame.setSize(300, 300);
		modeSelectionFrame.setLocation(300, 300);
		modeSelectionFrame.setLayout(new GridLayout(5,1));
		modeSelectionFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JLabel menuOptions = new JLabel("Select Mode");
		menuOptions.setFont(new Font("Monospace", 1, 27));
		menuOptions.setForeground(Color.WHITE);

		JPanel topPanel = new JPanel();
		topPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		topPanel.add(menuOptions);
		topPanel.setBackground(new Color(173, 216, 230));

		JButton practiceButton = new JButton("Practice");
		practiceButton.setPreferredSize(new Dimension(100, 30));
		practiceButton.setFont(new Font("Monospace", 1, 17));
		practiceButton.setActionCommand("Practice");
		practiceButton.addActionListener(new ButtonClickListener());

		JButton friendlyButton = new JButton("Friendly");
		friendlyButton.setPreferredSize(new Dimension(100, 30));
		friendlyButton.setFont(new Font("Monospace", 1, 17));
		friendlyButton.setActionCommand("Frindly");
		friendlyButton.addActionListener(new ButtonClickListener());
		
		JButton tournamentButton = new JButton("Tournament");
		tournamentButton.setPreferredSize(new Dimension(100, 30));
		tournamentButton.setFont(new Font("Monospace", 1, 17));
		tournamentButton.setActionCommand("Tournament");
		tournamentButton.addActionListener(new ButtonClickListener());

		JButton backButton = new JButton("Back");
		backButton.setPreferredSize(new Dimension(100, 30));
		backButton.setFont(new Font("Monospace", 1, 17));
		backButton.setActionCommand("Back");
		backButton.addActionListener(new ButtonClickListener());

		JPanel practicePanel = new JPanel();
		practicePanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		practicePanel.setBackground(Color.WHITE);
		practicePanel.add(practiceButton);

		JPanel friendlyPanel = new JPanel();
		friendlyPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		friendlyPanel.setBackground(Color.WHITE);
		friendlyPanel.add(friendlyButton);
		
		JPanel tournamentPanel = new JPanel();
		tournamentPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		tournamentPanel.setBackground(Color.WHITE);
		tournamentPanel.add(tournamentPanel);

		JPanel backPanel = new JPanel();
		backPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
		backPanel.setBackground(Color.WHITE);
		backPanel.add(backButton);
		
		modeSelectionFrame.add(topPanel);
		modeSelectionFrame.add(practicePanel);
		modeSelectionFrame.add(friendlyPanel);
		modeSelectionFrame.add(tournamentPanel);
		modeSelectionFrame.add(backPanel);
		modeSelectionFrame.setVisible(true);

	}
	
	private static class ButtonClickListener implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			String command = e.getActionCommand();
			LoginGUI lg = new LoginGUI();
			switch (command) {

			
			case "Back":
				modeSelectionFrame.dispose();
				lg.startGUI();
				break;

			default:
				break;
			}

		}

	}
	
	
}
